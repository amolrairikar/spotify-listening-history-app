name: Spotify Listening History App CI/CD Pipeline

on:
  push:
  pull_request:
    branches:
      - main

jobs:

  get_test_coverage:

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev

      - name: Make the test script executable
        run: chmod +x pipeline_scripts/run_tests.sh

      - name: Run unit and component tests
        run: ./pipeline_scripts/run_tests.sh

  integration_tests:

    runs-on: ubuntu-latest
    needs: get_test_coverage
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies for testing
        run: |
          python -m pip install --upgrade pip
          pip install behave
          pip install -r src/lambdas/requirements.txt

      - name: Make the test script executable
        run: chmod +x pipeline_scripts/run_integration_tests.sh

      - name: Set environment variables
        run: |
          echo "SPOTIFY_REFRESH_TOKEN=${{ secrets.SPOTIFY_REFRESH_TOKEN }}" >> $GITHUB_ENV
          echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> $GITHUB_ENV
          echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "S3_BUCKET_NAME=test-bucket" >> $GITHUB_ENV
  
      - name: Run integration_tests
        run: ./pipeline_scripts/run_integration_tests.sh

      - name: List files in the src/lambdas directory
        run: ls -la src/lambdas

      - name: Upload Lambda zip as artifact
        uses: actions/upload-artifact@v4
        with:
          name: lambda-zip
          path: src/lambdas/lambda_function.zip

  deploy_lambda:

    runs-on: ubuntu-latest
    needs: integration_tests
    # Only deploy lambda function if the event is a push to the main branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    env:
      ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Lambda zip artifact
        uses: actions/download-artifact@v4
        with:
          name: lambda-zip

      - name: List files in the root directory
        run: ls -la

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-2'

      - name: Make the deployment scripts executable
        run: |
          chmod +x pipeline_scripts/deploy_lambda.sh
          chmod +x pipeline_scripts/setup_lambda_execution_role.sh

      - name: Set up Lambda execution role
        run: ./pipeline_scripts/setup_lambda_execution_role.sh

      - name: Deploy lambda function
        run: ./pipeline_scripts/deploy_lambda.sh
